version: '3.9'

services:
  peer1.soft.${BASE_URL}:
    container_name: peer1.soft.${BASE_URL}
    extends:
      file: base.yml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.soft.${BASE_URL}
      - CORE_PEER_ADDRESS=peer1.soft.${BASE_URL}:443
      - CORE_PEER_LOCALMSPID=softMSP
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.soft.${BASE_URL}:443
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.soft.${BASE_URL}:443
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.soft.${BASE_URL}:5984
    volumes:
      - ${LOCAL_CA_PATH}/soft.${BASE_URL}/registers/peer1:/peer
    labels:
      traefik.tcp.routers.${DOCKER_NETWORKS}-soft-peer1.rule: HostSNI(`peer1.soft.${BASE_URL}`)
      traefik.tcp.routers.${DOCKER_NETWORKS}-soft-peer1.tls.certresolver: le
      traefik.tcp.routers.${DOCKER_NETWORKS}-soft-peer1.tls.passthrough: true
      traefik.tcp.services.${DOCKER_NETWORKS}-soft-peer1.loadbalancer.server.port: 443
    depends_on:
      couchdb.soft.${BASE_URL}:
        condition: service_healthy
      
  peer1.web.${BASE_URL}:
    container_name: peer1.web.${BASE_URL}
    extends:
      file: base.yml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.web.${BASE_URL}
      - CORE_PEER_ADDRESS=peer1.web.${BASE_URL}:443
      - CORE_PEER_LOCALMSPID=webMSP
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.web.${BASE_URL}:443
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.web.${BASE_URL}:443
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.web.${BASE_URL}:5984
    volumes:
      - ${LOCAL_CA_PATH}/web.${BASE_URL}/registers/peer1:/peer
    labels:
      traefik.tcp.routers.${DOCKER_NETWORKS}-web-peer1.rule: HostSNI(`peer1.web.${BASE_URL}`)
      traefik.tcp.routers.${DOCKER_NETWORKS}-web-peer1.tls.certresolver: le
      traefik.tcp.routers.${DOCKER_NETWORKS}-web-peer1.tls.passthrough: true
      traefik.tcp.services.${DOCKER_NETWORKS}-web-peer1.loadbalancer.server.port: 443
    depends_on:
      couchdb.web.${BASE_URL}:
        condition: service_healthy
  
  peer1.hard.${BASE_URL}:
    container_name: peer1.hard.${BASE_URL}
    extends:
      file: base.yml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.hard.${BASE_URL}
      - CORE_PEER_ADDRESS=peer1.hard.${BASE_URL}:443
      - CORE_PEER_LOCALMSPID=hardMSP
      - CORE_PEER_GOSSIP_ENDPOINT=peer1.hard.${BASE_URL}:443
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.hard.${BASE_URL}:443
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.hard.${BASE_URL}:5984
    volumes:
      - ${LOCAL_CA_PATH}/hard.${BASE_URL}/registers/peer1:/peer
    labels:
      traefik.tcp.routers.${DOCKER_NETWORKS}-hard-peer1.rule: HostSNI(`peer1.hard.${BASE_URL}`)
      traefik.tcp.routers.${DOCKER_NETWORKS}-hard-peer1.tls.certresolver: le
      traefik.tcp.routers.${DOCKER_NETWORKS}-hard-peer1.tls.passthrough: true
      traefik.tcp.services.${DOCKER_NETWORKS}-hard-peer1.loadbalancer.server.port: 443
    depends_on:
      couchdb.hard.${BASE_URL}:
        condition: service_healthy

  orderer1.council.${BASE_URL}:
    container_name: orderer1.council.${BASE_URL}
    extends:
      file: base.yml
      service: orderer-base
    environment:
      - ORDERER_HOST=orderer1.council.${BASE_URL}
      - ORDERER_GENERAL_LOCALMSPID=councilMSP
    volumes:
      - ${LOCAL_CA_PATH}/council.${BASE_URL}/registers/orderer1:/orderer
      - ${LOCAL_ROOT_PATH}/data/genesis.block:${DOCKER_CA_PATH}/orderer/genesis.block
    labels:
      traefik.tcp.routers.${DOCKER_NETWORKS}-council-orderer1.rule: HostSNI(`orderer1.council.${BASE_URL}`)
      traefik.tcp.routers.${DOCKER_NETWORKS}-council-orderer1.service: ${DOCKER_NETWORKS}-council-orderer1
      traefik.tcp.routers.${DOCKER_NETWORKS}-council-orderer1.tls.certresolver: le
      traefik.tcp.routers.${DOCKER_NETWORKS}-council-orderer1.tls.passthrough: true
      traefik.tcp.services.${DOCKER_NETWORKS}-council-orderer1.loadbalancer.server.port: 443

networks:
  ${DOCKER_NETWORKS}:
    external: true
